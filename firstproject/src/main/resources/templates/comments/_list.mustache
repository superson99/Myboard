<div id="comments-list">

    <!--commentDtos가 여러개의 내용이라면 아래 내용을 반복 해라-->
    {{#commentDtos}}
        <!--card라는 bootstrap의 틀을 사용함-->
        <div class ="card m-2" id ="comments-{{id}}">
            <div class = "card-header">
                {{nickname}}
                <!-- Button trigger modal -->
                <button type="button"
                        class="btn btn-sm btn-outline-primary"
                        data-bs-toggle="modal"
                        data-bs-target="#Comment-edit-modal"
                        data-bs-id = "{{id}}"
                        data-bs-nickname = "{{nickname}}"
                        data-bs-body = "{{body}}"
                        data-bs-article-id = "{{articleId}}">수정</button>
                <!-- Comment Delete Btn-->
                <button type ="button" class ="btn btn-sm btn-outline-danger comment-delete-btn"
                data-comment-id = "{{id}}">삭제</button>
            </div>
            <div class = "card-body">
                {{body}}
            </div>
        </div>
    {{/commentDtos}}
</div>

    <!-- Modal -->
    <div class="modal fade" id="Comment-edit-modal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">댓글 수정</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                   <!--댓글 수정 폼-->
                    <form>
                        <!--닉네임-->
                        <div class="mb-3">
                            <label class="form-label">아이디</label>
                            <input class="form-control" id="edit-comment-nickname">
                        </div>
                        <!--본문-->
                        <div class="mb-3">
                            <label class="form-label">댓글</label>
                            <textarea class="form-control " id="edit-comment-body"></textarea>
                        </div>
                        <!--히든 인풋(article)-->
                            <input type = "hidden" id="edit-comment-id">
                            <input type = "hidden" id="edit-comment-article-id">

                        <button type="button" class="btn btn-outline-primary btn-sm" id="comment-edit-btn">수정 완료</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal 이벤트 처리 -->
    <script>
        //모달 요소 선택
        const commentEditModal = document.querySelector("#Comment-edit-modal");

        //모달 이벤트 감지
        commentEditModal.addEventListener("show.bs.modal",function(event){
            console.log("모달이 열렸습니담");

            //트리거 버튼 선택
            const triggerBtn =event.relatedTarget;

            //데이터 가져오기
            const id = triggerBtn.getAttribute('data-bs-id');
            const nickname = triggerBtn.getAttribute('data-bs-nickname');
            const body = triggerBtn.getAttribute('data-bs-body');
            const articleId = triggerBtn.getAttribute('data-bs-article-id');

            //데이터를 반영
            document.querySelector("#edit-comment-nickname").value = nickname;
            document.querySelector("#edit-comment-body").value = body;
            document.querySelector("#edit-comment-id").value = id;
            document.querySelector("#edit-comment-article-id").value = articleId;
        })

        {

            //수정 완료 버튼을 가져와서
            const updateBtn = document.querySelector("#comment-edit-btn");

            //클릭 이벤트 감지
            updateBtn.addEventListener("click" , function (){

                //데이터를 받아오고
                const updateComment = {
                    id:document.querySelector("#edit-comment-id").value,
                    nickname : document.querySelector("#edit-comment-nickname").value,
                    body : document.querySelector("#edit-comment-body").value,
                    articleId:document.querySelector("#edit-comment-article-id").value
                };

                console.log(updateComment);

                //전송
                const url = "/api/comments/"+updateComment.id;
                fetch(url,{
                    method:"PATCH",
                    body:JSON.stringify(updateComment),//comment를 json으로 변경하여 보냄
                    headers:{//헤더정보에 보내는 파일이 json파일인것을 명시해준다
                        "Content-Type":"application/json"
                    }
                }).then(response =>{
                    //fetch로 요청을 보낸후 오는 http 응답 코드에 따른 메시지 출력
                    const msg = (response.ok) ? "댓글이 수정되었습니다." : "수정 실패!";
                    alert(msg); //경고창으로 출력
                    //그리고 페이지 새로고침
                    window.location.reload();
                })//end:then
            });//end:addEventListener



        }

    </script>

<!--댓글 삭제 -->
<script>
    {
        //삭제 버튼들을 가져옴
       const commentDeleteBtns = document.querySelectorAll(".comment-delete-btn");

       //삭제 버튼 이벤트를 처리
        commentDeleteBtns.forEach(btn =>{
            btn.addEventListener("click", function(event){

                const commentDeleteBtn = event.target;

                const commentId =  commentDeleteBtn.getAttribute("data-comment-id");
                console.log("클릭클릭" + commentId);

                const url = "/api/articles/" + commentId +"/comments";

                fetch(url,{
                    method:"DELETE"

                }).then(response =>{
                    //fetch로 요청을 보낸후 오는 http 응답 코드에 따른 메시지 출력
                    const msg = (response.ok) ? "댓글이 삭제되었음." : "삭제 실패 실패!";
                    alert(msg); //경고창으로 출력
                    //그리고 페이지 새로고침
                    //window.location.reload();
                    const target = document.querySelector(`#comments-${commentId}`);
                    target.remove();
                });//end:then;
            });
        });

    }

</script>
